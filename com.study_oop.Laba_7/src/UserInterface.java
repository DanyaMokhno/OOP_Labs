/**
 * –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞—è —Ä–∞–±–æ—Ç–∞ ‚Ññ5
 *
 * @author –î–∞–Ω–∏–∏–ª –ú–æ—Ö–Ω–æ 3312
 * @version 1.0
 */

import javax.swing.*;
import java.awt.*;
import java.awt.Taskbar;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;

/**
 * –û—Å–Ω–æ–≤–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –≤–∫–ª—é—á–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –æ–∫–Ω–∞,
 * –ø–∞–Ω–µ–ª–µ–π, –∫–Ω–æ–ø–æ–∫, –º–µ–Ω—é –∏ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏.
 */
public class UserInterface {
    /** –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. */
    public JFrame window;

    /** –ò–∫–æ–Ω–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∑–∞–≥–æ–ª–æ–≤–∫–µ –æ–∫–Ω–∞. */
    private Image icon;

    /** –ì–ª–∞–≤–Ω–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤. */
    private JPanel panel;

    /** –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –º–µ–Ω—é –∏ –ø–æ–∏—Å–∫–∞. */
    private JPanel header;

    /** –ü–∞–Ω–µ–ª—å –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è. */
    private JPanel saveArea;

    /** –ü–∞–Ω–µ–ª—å –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –ø–æ–ª—è –∏ –∫–Ω–æ–ø–∫–∏ –ø–æ–∏—Å–∫–∞. */
    private JPanel searchArea;

    /** –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞. */
    public JButton saveButton;

    /** –°—Ç—Ä–æ–∫–∞ –º–µ–Ω—é, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. */
    public JMenuBar menuBar;

    /** –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Ç–µ–∫—Å—Ç–∞ –ø–æ–∏—Å–∫–∞. */
    public JTextField searchField;

    /** –ö–Ω–æ–ø–∫–∞ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –ø–æ –≤–≤–µ–¥—ë–Ω–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É. */
    public JButton searchButton;

    /** –¢–µ–∫—Å—Ç-–∑–∞–ø–æ–ª–Ω–∏—Ç–µ–ª—å –¥–ª—è –ø–æ–ª—è –ø–æ–∏—Å–∫–∞. */
    public String placeholder;

    /** –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫–Ω–æ–ø–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ —Å–ø—Ä–∞–≤–∫–∏. */
    private JPanel footer;

    /** –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. */
    public JButton referenceButton;

    /** –ö–Ω–æ–ø–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É. */
    public JButton add;

    /** –ö–Ω–æ–ø–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã. */
    public JButton del;

    /** –ü–∞–Ω–µ–ª—å –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è. */
    private JPanel editPanel;

    /** –ú–æ–¥–µ–ª—å —Ç–∞–±–ª–∏—Ü—ã, —É–ø—Ä–∞–≤–ª—è—é—â–∞—è –¥–∞–Ω–Ω—ã–º–∏, –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã–º–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ. */
    public DefaultTableModel tableModel;

    /** –¢–∞–±–ª–∏—Ü–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö. */
    public JTable table;

    /** –ü–∞–Ω–µ–ª—å –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã, –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –±–æ–ª—å—à–æ–º –æ–±—ä—ë–º–µ. */
    public JScrollPane scrollPane;

    /** –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏ –∏ —Ç–∞–±–ª–∏—Ü–µ–π. */
    public Processor processor;

    /**
     * –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    public void show() {
        if (System.getProperty("os.name").toLowerCase().contains("mac"))
            System.setProperty("apple.awt.application.name", "–ü–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞");

        // –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ–∫–Ω–∞
        window = new JFrame("–ü–æ–ª–∏–∫–ª–∏–Ω–∏–∫–∞");
        window.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        window.setSize(800, 400);
        window.setLocationRelativeTo(null);

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
        processor = new Processor(window);

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏
        icon = window.getToolkit().getImage(getClass().getResource("/img/icon.png"));
        if (System.getProperty("os.name").toLowerCase().contains("mac")) {
            Taskbar.getTaskbar().setIconImage(icon);
            System.setProperty("apple.laf.useScreenMenuBar", "true");
        } else {
            window.setIconImage(icon);
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–Ω–µ–ª—å
        panel = new JPanel();
        panel.setBackground(new Color(216, 240, 211));
        panel.setLayout(new BorderLayout());

        // –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω—é
        menuBar = new JMenuBar();
        String[] menus = {"File", "Edit", "View", "Help"};
        String[][] menuItems = {{"Open file", "Save", "Save as", "Print"}, {"Add", "Delete"}};
        Runnable[][] events = {{
                processor::openFile,
                processor::saveFile,
                processor::saveFileAs,
                processor::printFile,
        }, {this::addRow, this::delRow}};
        for (int i = 0; i < menus.length; i++) {
            JMenu menu = new JMenu(menus[i]);
            for (int j = 0; menuItems.length > i && j < menuItems[i].length; j++) {
                JMenuItem item = new JMenuItem(menuItems[i][j]);
                final int menuIndex = i;
                final int itemIndex = j;
                item.addActionListener(e -> events[menuIndex][itemIndex].run());
                menu.add(item);
            }
            menuBar.add(menu);
        }
        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é —ç–∫—Å–ø–æ—Ä—Ç–∞
        JMenu export = new JMenu("Export");
        JMenuItem html = new JMenuItem("HTML");
        html.addActionListener(e -> processor.exportFile("html"));
        JMenuItem pdf = new JMenuItem("PDF");
        pdf.addActionListener(e -> processor.exportFile("pdf"));
        export.add(html);
        export.add(pdf);
        menuBar.getMenu(0).add(export);

        // C–æ–∑–¥–∞—ë–º —à–∞–ø–∫—É
        header = new JPanel();
        header.setBackground(new Color(211, 240, 228));
        header.setLayout(new BorderLayout());

        // –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        saveArea = new JPanel();
        saveArea.setBackground(new Color(211, 240, 228));
        saveButton = new JButton("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å");
        saveArea.add(saveButton);
        header.add(saveArea, BorderLayout.WEST);


        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é
        window.setJMenuBar(menuBar);

        // –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞
        searchField = getSearchField();

        // –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞
        searchButton = new JButton("–ò—Å–∫–∞—Ç—å");
        searchButton.setPreferredSize(new Dimension(100, 30));

        // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–∏—Å–∫ –≤ —à–∞–ø–∫—É
        searchArea = new JPanel();
        searchArea.add(searchButton, BorderLayout.EAST);
        searchArea.setBackground(new Color(211, 240, 228));
        searchArea.add(searchField, BorderLayout.EAST);
        header.add(searchArea, BorderLayout.EAST);

        // –î–æ–±–∞–≤–ª—è–µ–º —à–∞–ø–∫—É –Ω–∞ –ø–∞–Ω–µ–ª—å
        panel.add(header, BorderLayout.NORTH);

        // —Å–æ–∑–¥–∞—ë–º —Ñ—É—Ç–µ—Ä
        footer = new JPanel();
        footer.setBackground(new Color(211, 240, 228));
        footer.setLayout(new BorderLayout());

        // –ö–Ω–æ–ø–∫–∞ –ø–æ–∫–∞–∑–∞ —Å–ø—Ä–∞–≤–∫–∏
        referenceButton = new JButton("–°–ø—Ä–∞–≤–∫–∞");
        referenceButton.setPreferredSize(new Dimension(100, 30));
        footer.add(referenceButton, BorderLayout.WEST);

        // –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É
        add = new JButton("+");
        del = new JButton("-");
        editPanel = new JPanel();
        editPanel.setBackground(new Color(211, 240, 228));
        editPanel.setLayout(new FlowLayout(FlowLayout.LEFT, 0, 0));
        editPanel.add(del);
        editPanel.add(add);

        footer.add(editPanel, BorderLayout.EAST);
        panel.add(footer, BorderLayout.SOUTH);


        // –°–æ–∑–¥–∞—ë–º —Ç–∞–±–ª–∏—á–∫—É
        String[] columnNames = {"–§–ò–û –ü–ê–¶–ò–ï–ù–¢–ê", "–§–ò–û –í–†–ê–ß–ê", "–î–ê–¢–ê –ó–ê–ü–ò–°–ò", "–í–†–ï–ú–Ø –ó–ê–ü–ò–°–ò", "–ñ–ê–õ–û–ë–´"};
        processor.createTable(columnNames);
        table = processor.table;
        tableModel = processor.tableModel;

        // –û—Ñ–æ—Ä–º–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—É
        table.getTableHeader().setBackground(new Color(100, 180, 100)); // –∑–µ–ª–µ–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫
        table.getTableHeader().setForeground(Color.WHITE);
        table.setRowHeight(30);
        table.getTableHeader().setReorderingAllowed(false); // –ó–∞–ø—Ä–µ—Ç –º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏
        table.setGridColor(new Color(19, 54, 11));
        table.setSelectionBackground(new Color(216, 240, 211));
        table.setSelectionForeground(new Color(4, 17, 3));

        // –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–æ–ª–ª
        scrollPane = new JScrollPane(table);
        panel.add(scrollPane, BorderLayout.CENTER);

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–∞–Ω–µ–ª–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –æ–∫–Ω–æ
        window.add(panel);

        add_filters();

        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–∫–Ω–∞
        window.setVisible(true);
    }

    /**
     * –°–æ–∑–¥–∞—ë—Ç –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–±–∏—Ä–∞—é—â–∏–º—Å—è —Ç–µ–∫—Å—Ç–æ–º –≤–Ω—É—Ç—Ä–∏
     *
     * @return –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
     */
    private JTextField getSearchField() {
        searchField = new JTextField(15);
        searchField.setPreferredSize(new Dimension(100, 30));

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–∞–∫ –ø–ª—ç–π—Å—Ö–æ–ª–¥–µ—Ä
        placeholder = "üîç–ü–æ–∏—Å–∫";
        searchField.setText(placeholder);
        searchField.setForeground(Color.GRAY);

        // –î–æ–±–∞–≤–ª—è–µ–º FocusListener –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ placeholder
        searchField.addFocusListener(new FocusAdapter() {
            /**
             * –£–±–∏—Ä–∞–µ—Ç –ø–ª—ç–π—Å—Ö–æ–ª–¥–µ—Ä –ø—Ä–∏ —Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–∏–∏ –Ω–∞ –ø–æ–ª–µ
             * @param e —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
             */
            @Override
            public void focusGained(FocusEvent e) {
                if (searchField.getText().equals(placeholder)) {
                    searchField.setText("");
                    searchField.setForeground(Color.BLACK); // –û–±—ã—á–Ω—ã–π —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
                }
            }

            /**
             * –î–æ–±–∞–≤–ª—è–µ—Ç –ø–ª—ç–π—Å—Ö–æ–ª–¥–µ—Ä –ø—Ä–∏ —Ä–∞—Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏–∑ –ø–æ–ª—è
             * @param e —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
             */
            @Override
            public void focusLost(FocusEvent e) {
                if (searchField.getText().isEmpty()) {
                    searchField.setText(placeholder);
                    searchField.setForeground(Color.GRAY); // –¶–≤–µ—Ç placeholder
                }
            }
        });
        return searchField;
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –∫ —ç–ª–µ–º–µ–Ω—Ç–∞–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
     */
    private void add_filters() {
        JComponent[] fields = {add, del, searchButton, saveButton, referenceButton};
        Runnable[] func = {this::addRow, this::delRow, this::search, processor::saveFile, this::show_ref};

        for (int i = 0; i < fields.length; i++) {
            final int index = i;
            // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—à–∞—Ç–µ–ª—å
            ((AbstractButton) fields[i]).addActionListener(new ActionListener() {
                /** –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ */
                @Override
                public void actionPerformed(ActionEvent e) {
                    func[index].run();
                }
            });
        }
    }

    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É
     */
    private void addRow() {
        tableModel.addRow(new Object[]{"", "", "", "", ""});
    }

    /**
     * –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
     */
    private void delRow() {
        if (table.getSelectedRow() != -1)
            for (int i : getSelectedRows())
                tableModel.removeRow(i);
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –≤—ã–¥–µ–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö –≤ –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç–æ–º –ø–æ—Ä—è–¥–∫–µ.
     *
     * @return –ø–µ—Ä–µ–≤—ë—Ä–Ω—É—Ç—ã–π –º–∞—Å—Å–∏–≤ –≤—ã–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
     */
    private int[] getSelectedRows() {
        int[] s_rows = table.getSelectedRows();
        for (int i = 0; i < s_rows.length / 2; i++) {
            int temp = s_rows[i];
            s_rows[i] = s_rows[s_rows.length - 1 - i];
            s_rows[s_rows.length - 1 - i] = temp;
        }
        return s_rows;
    }

    /**
     * –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É, –≤–≤–µ–¥–µ–Ω–Ω–æ–º—É –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞.
     */
    private void search() {
        try{
            NotSearched.checkString(searchField.getText(), placeholder);
            JOptionPane.showMessageDialog(window, "–ò—â–µ–º: " + searchField.getText());
        }catch (NotSearched e){
            JOptionPane.showMessageDialog(window, e.getMessage());
        }
    }

    /**
     * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.
     */
    private void show_ref() {
        if (table.getSelectedRow() != -1) {
            int selectedRow = table.getSelectedRow();
            String fio = (String) table.getValueAt(selectedRow, 0);
            String responsible = (String) table.getValueAt(selectedRow, 1);
            String date = (String) table.getValueAt(selectedRow, 2);
            String symptom = (String) table.getValueAt(selectedRow, 4);

            String reference = "<html>"
                    + "<head>"
                    + "<style>"
                    + "body { font-family: Arial, sans-serif; padding: 20px; }"
                    + "h1 { text-align: center; }"
                    + "p { font-size: 14px; line-height: 1.5; }"
                    + "strong { font-weight: bold; }"
                    + "table { width: 100%; margin-top: 20px; border-collapse: collapse; }"
                    + "th, td { border: 1px solid #000; padding: 8px; text-align: left; }"
                    + "th { background-color: #f2f2f2; }"
                    + "</style>"
                    + "</head>"
                    + "<body>"
                    + "<h1>–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞</h1>"
                    + "<p><strong>–§–ò–û –ø–∞—Ü–∏–µ–Ω—Ç–∞:</strong> " + fio + "</p>"
                    + "<p><strong>–î–∞—Ç–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è:</strong> " + date + "</p>"
                    + "<p><strong>–ñ–∞–ª–æ–±—ã:</strong> " + symptom + "</p>"
                    + "<p><strong>–ù–∞–∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä–∞—á–∞:</strong> </p>"
                    + "<table>"
                    + "<tr><th>–î–∞—Ç–∞</th><th>–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ</th></tr>"
                    + "<tr><td>" + date + "</td><td></td></tr>" // –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–∏ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
                    + "</table>"
                    + "<p>–í—Ä–∞—á " + responsible + "</p>"
                    + "<p>–ü–æ–¥–ø–∏—Å—å: _____________________</p>"
                    + "<p>–î–∞—Ç–∞: " + date + "</p>"
                    + "</body>";
            JOptionPane.showMessageDialog(null, reference, "–°–ø—Ä–∞–≤–∫–∞", JOptionPane.INFORMATION_MESSAGE);
        }
    }

    /**
     * –ò—Å–∫–ª—é—á–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –æ–ø–µ—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –±–µ–∑ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥–∞.
     */
    private static class NotSearched extends Exception {
        /**
         * –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è NotSearched —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
         */
        public NotSearched() {
            super("–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞üò¨");
        }
        /**
         * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–æ–π –∏–ª–∏ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–º.
         *
         * @param str         —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
         * @param placeholder –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –≤–≤–æ–¥–∞
         * @throws NotSearched –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞—è –∏–ª–∏ —Ä–∞–≤–Ω–∞ –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä—É
         */
        private static void checkString(String str, String placeholder) throws NotSearched {
            if ((str.isEmpty() || str.equals(placeholder))) {
                throw new NotSearched();
            }
        }
    }

    public static void main(String[] args) {
        UserInterface userInterface = new UserInterface();
        userInterface.show();
    }
}

